generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      String    @default("user")
  avatar    String?
  location  String?
  bio       String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  reviews   Review[]
}

model Category {
  id        String   @id @default(uuid())
  name      String
  icon      String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Place {
  id          String    @id @default(uuid())
  name        String
  type        String
  description String?
  image       String?
  rating      Float     @default(0)
  location    String
  plusCode    String    @unique
  latitude    Float
  longitude   Float
  status      String    @default("active")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reviews     Review[]
}

model Review {
  id        String   @id @default(uuid())
  rating    Float
  comment   String?
  photos    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  place     Place    @relation(fields: [placeId], references: [id])
  placeId   String
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  image       String?
  date        DateTime
  location    String
  plusCode    String   @unique
  status      String   @default("upcoming")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Country {
  id        String   @id @default(uuid())
  name      String
  code      String   @unique
  flag      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cities    City[]
}

model City {
  id          String   @id @default(uuid())
  name        String
  latitude    Float
  longitude   Float
  plusCode    String   @unique
  population  Int?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  country     Country  @relation(fields: [countryId], references: [id])
  countryId   String
}